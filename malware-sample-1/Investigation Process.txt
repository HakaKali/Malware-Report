Investigation Process:

The investigation process was conducted in an isolated virtual machine, disconnected from the network, to ensure a controlled environment for analysis.

Stages of Investigation:

     TrIDNET: The investigation began by utilizing TrIDNET, a file identification tool, to analyze the file types and provide insights into the nature of the files encountered. TrIDNET uses a database of file signatures and heuristic analysis to determine the probable file type and assist in understanding the content of the files under investigation.

    FAKENET: FAKENET was employed during the investigation to simulate network interactions without actual network connectivity. This allowed for the observation of malware behavior and network-related activities within a controlled environment. By using FAKENET, we gained valuable insights into how the malware interacts with the network and any potential malicious activities it attempts.

    RegShot: The investigation further involved the use of RegShot to capture and compare the registry state before and after running the malware. This facilitated the identification of any changes made to the registry by the malware during its execution. By analyzing the registry modifications, we were able to understand the impact of the malware on the system and potentially uncover its persistence mechanisms.

Filtering with Process Monitor:

    We applied the following filters in Process Monitor to focus on specific activities:
        - WriteFile: Captured file write operations performed by processes.
        - SetDispositionInformation: Logged changes to file disposition information, such as file creation, deletion, or renaming.
        - RegSetValue: Recorded modifications to registry values made by processes.
        - Process Create: Tracked the creation of new processes.
        - TCP: Monitored TCP network traffic, including connection establishment, packet exchange, and termination.
        - UDP: Observed UDP network traffic, encompassing packet exchange without connection-oriented behavior.

Graphic Analysis with ProcDot:

    For visual analysis, we utilized ProcDot to generate visual representations of process behavior and relationships. ProcDot aided in identifying patterns, dependencies, and potential indicators of compromise within the analyzed system.


